//! This module tests the library's analysis capabilities on the
//! `MortgageRender` contract`.
#![cfg(test)]

use storage_layout_analyzer::watchdog::LazyWatchdog;

mod common;

/// Tests the analyser on the bytecode of the MortgageRender contract deployed
/// [here](https://etherscan.io/address/0xf5a5fe458ec5ad8db8fe746679fa80cf1e7d7592).
#[test]
fn correctly_generates_a_layout() -> anyhow::Result<()> {
    // Create the analyzer
    let bytecode = "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063812c38a81461003b578063c87b56dd1461007f575b600080fd5b6100627f0000000000000000000000006f7d2f595f47f2e6b5b1392643a311618942cee281565b6040516001600160a01b0390911681526020015b60405180910390f35b61009261008d366004610d71565b61009f565b60405161007691906113e2565b60606100a9610cac565b6000806100b585610207565b9150915081816040516020016100cc929190611070565b60408051808303601f19018152918152908452805160608101909152603980825261161360208301396020840152610103856104cb565b6040808501919091528051610100810190915260d880825261153b60208301396060840152610131856105e9565b608084015260408051606081019091526022808252611519602083013960a084018190528351602080860151604080880151606089015160808a01519251600097610183979693949293909101610de9565b604051602081830303815290604052905060006101d96101a28861077c565b6101aa6107cd565b6101b385610a16565b6040516020016101c593929190610f68565b604051602081830303815290604052610a16565b9050806040516020016101ec919061102b565b60405160208183030381529060405295505050505050919050565b60608060007f0000000000000000000000006f7d2f595f47f2e6b5b1392643a311618942cee26001600160a01b03166399fbab88856040518263ffffffff1660e01b815260040161025a91815260200190565b60606040518083038186803b15801561027257600080fd5b505afa158015610286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102aa9190610d89565b509150506000816001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156102e957600080fd5b505afa1580156102fd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103259190810190610cd3565b604080516002808252818301909252919250829160009160208201818036833701905050905060006002835161035b9190611460565b67ffffffffffffffff81111561038157634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156103ab576020820181803683370190505b50905060005b600281101561042e578381815181106103da57634e487b7160e01b600052603260045260246000fd5b602001015160f81c60f81b83828151811061040557634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535080610426816114a7565b9150506103b1565b5060025b83518110156104bd5783818151811061045b57634e487b7160e01b600052603260045260246000fd5b01602001516001600160f81b03191682610476600284611460565b8151811061049457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350806104b5816114a7565b915050610432565b509097909650945050505050565b60405163133f757160e31b8152600481018290526060906000906001600160a01b037f0000000000000000000000006f7d2f595f47f2e6b5b1392643a311618942cee216906399fbab889060240160606040518083038186803b15801561053157600080fd5b505afa158015610545573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105699190610d89565b50915050806001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156105a657600080fd5b505afa1580156105ba573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105e29190810190610cd3565b9392505050565b60405163133f757160e31b8152600481018290526060906000906001600160a01b037f0000000000000000000000006f7d2f595f47f2e6b5b1392643a311618942cee216906399fbab889060240160606040518083038186803b15801561064f57600080fd5b505afa158015610663573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106879190610d89565b925050506000670de0b6b3a7640000826106a1919061142d565b905060006106b0826064611441565b6106c1662386f26fc100008561142d565b6106cb9190611460565b905060006106da600a8361142d565b905060006106e982600a611441565b6106f39084611460565b905081158015610701575080155b1561071a5761070f84610b8a565b979650505050505050565b8115801590610727575080155b1561074f5761073584610b8a565b61073e83610b8a565b6040516020016101ec929190610ed9565b61075884610b8a565b61076183610b8a565b61076a83610b8a565b6040516020016101ec93929190610f15565b606060008061078a84610207565b915091508181610799866104cb565b6107a2876105e9565b6040516020016107b59493929190610e68565b60405160208183030381529060405292505050919050565b6060604051602001610a02907f54686973204e465420726570726573656e747320612048424720746f6b656e2081527f636f6c6c61746572616c20706f736974696f6e20696e20307866696e6420737960208201527f7374656d2e20546865206f776e6572206f662074686973204e46542063616e2060408201527f6d6f64696679206f722072656465656d2074686520706f736974696f6e2e5c6e6060820152612e3760f11b60808201527fe29aa0efb88f20444953434c41494d45523a204475652064696c6967656e636560828201527f20697320696d7065726174697665207768656e20617373657373696e6720746860a28201527f6973204e46542e204d616b652073757265207468617420746865204e4654206960c28201527f6d616765206d61746368657320746865206e756d626572206f6620244842472060e28201527f696e2074686520636f6c6c61746572616c20706f736974696f6e2e20447565206101028201527f746f20646174612063616368696e67206973737565732c2069742069732068696101228201527f67686c79207265636f6d6d656e64656420746f20636c69636b207468652052656101428201527f667265736820627574746f6e206f6e20746865204f70656e73656120646574616101628201527f696c73207061676520746f2073796e6368726f6e697a6520746865206c6174656101828201527f73742064617461206265666f72652070757263686173696e67204e46542e00006101a28201526101c00190565b604051602081830303815290604052905090565b6060815160001415610a3657505060408051602081019091526000815290565b600060405180606001604052806040815260200161164c6040913990506000600384516002610a659190611415565b610a6f919061142d565b610a7a906004611441565b90506000610a89826020611415565b67ffffffffffffffff811115610aaf57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610ad9576020820181803683370190505b509050818152600183018586518101602084015b81831015610b45576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101610aed565b600389510660018114610b5f5760028114610b7057610b7c565b613d3d60f01b600119830152610b7c565b603d60f81b6000198301525b509398975050505050505050565b606081610bae5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610bd85780610bc2816114a7565b9150610bd19050600a8361142d565b9150610bb2565b60008167ffffffffffffffff811115610c0157634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610c2b576020820181803683370190505b5090505b8415610ca457610c40600183611460565b9150610c4d600a866114c2565b610c58906030611415565b60f81b818381518110610c7b57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610c9d600a8661142d565b9450610c2f565b949350505050565b6040518060c001604052806006905b6060815260200190600190039081610cbb5790505090565b600060208284031215610ce4578081fd5b815167ffffffffffffffff80821115610cfb578283fd5b818401915084601f830112610d0e578283fd5b815181811115610d2057610d20611502565b604051601f8201601f19908116603f01168101908382118183101715610d4857610d48611502565b81604052828152876020848701011115610d60578586fd5b61070f836020830160208801611477565b600060208284031215610d82578081fd5b5035919050565b600080600060608486031215610d9d578182fd5b835160208501519093506001600160a01b0381168114610dbb578283fd5b80925050604084015190509250925092565b60008151610ddf818560208601611477565b9290920192915050565b600087516020610dfc8285838d01611477565b885191840191610e0f8184848d01611477565b8851920191610e218184848c01611477565b8751920191610e338184848b01611477565b8651920191610e458184848a01611477565b8551920191610e578184848901611477565b919091019998505050505050505050565b60008551610e7a818460208a01611477565b855190830190610e8e818360208a01611477565b6201016960ed1b91018181528551909190610eb0816003850160208a01611477565b60039201918201528351610ecb816006840160208801611477565b016006019695505050505050565b60008351610eeb818460208801611477565b601760f91b9083019081528351610f09816001840160208801611477565b01600101949350505050565b60008451610f27818460208901611477565b601760f91b9083019081528451610f45816001840160208901611477565b8451910190610f5b816001840160208801611477565b0160010195945050505050565b693d913730b6b2911d101160b11b81528351600090610f8e81600a850160208901611477565b72111610113232b9b1b934b83a34b7b7111d101160691b600a918401918201528451610fc181601d840160208901611477565b7f222c2022696d616765223a2022646174613a696d6167652f7376672b786d6c3b601d92909101918201526618985cd94d8d0b60ca1b603d820152835161100f816044840160208801611477565b61227d60f01b6044929091019182015260460195945050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161106381601d850160208701611477565b91909101601d0192915050565b7f3c7376672077696474683d2732393027206865696768743d273239302720766981527f6577426f783d2730203020323930203239302720786d6c6e733d27687474703a60208201527f2f2f7777772e77332e6f72672f323030302f7376672720786d6c6e733a786c6960408201527f6e6b3d27687474703a2f2f7777772e77332e6f72672f313939392f786c696e6b60608201527f273e3c7374796c653e2e627b666f6e742d66616d696c793a2748656c7665746960808201527f6361204e657565273b776f72642d627265616b3a627265616b2d616c6c3b7d2e60a08201527f747b636f6c6f723a72676261283235352c203235352c203235352c20302e383560c08201527f293b666f6e742d7765696768743a3530303b7d2e6e7b636f6c6f723a7267626160e08201527f283235352c203235352c203235352c20302e3635293b666f6e742d77656967686101008201527f743a3430303b7d2e6631347b666f6e742d73697a653a313470783b7d2e67637b6101208201527f66696c6c3a20233437364133303b7d3c2f7374796c653e3c646566733e3c636c6101408201527f6970506174682069643d2763273e3c726563742077696474683d2732393027206101608201527f6865696768743d27323930272072783d273432272072793d27343227202f3e3c6101808201527f2f636c6970506174683e3c2f646566733e3c7265637420636c69702d706174686101a08201527f3d2775726c282363292720636c6173733d2767632720783d27302720793d27306101c08201527f272077696474683d2732393027206865696768743d2732393027202f3e3c666f6101e08201527f726569676e4f626a65637420783d2733352720793d273532272077696474683d6102008201527f2732323027206865696768743d27313233273e3c64697620636c6173733d27626102208201527f2720786d6c6e733d27687474703a2f2f7777772e77332e6f72672f313939392f6102408201527f7868746d6c273e3c64697620636c6173733d2774273e3c7370616e207374796c61026082015273329e93b337b73a16b9b4bd329d189b383c1d939f60611b6102808201526000610ca46113dc6113a5610294850187610dcd565b7f3c2f7370616e3e3c7370616e207374796c653d27666f6e742d73697a653a3234815264383c1d939f60d91b602082015260250190565b84610dcd565b6020815260008251806020840152611401816040850160208701611477565b601f01601f19169190910160400192915050565b60008219821115611428576114286114d6565b500190565b60008261143c5761143c6114ec565b500490565b600081600019048311821515161561145b5761145b6114d6565b500290565b600082821015611472576114726114d6565b500390565b60005b8381101561149257818101518382015260200161147a565b838111156114a1576000848401525b50505050565b60006000198214156114bb576114bb6114d6565b5060010190565b6000826114d1576114d16114ec565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe3c2f6469763e3c2f6469763e3c2f666f726569676e4f626a6563743e3c2f7376673e3c2f6469763e3c2f6469763e3c2f666f726569676e4f626a6563743e3c666f726569676e4f626a65637420783d2733352720793d27313735272077696474683d2732323027206865696768743d27313135273e3c64697620636c6173733d27622720786d6c6e733d27687474703a2f2f7777772e77332e6f72672f313939392f7868746d6c273e3c64697620636c6173733d276e20663134273e436f6c6c61746572616c204c6f636b65643c2f6469763e3c64697620636c6173733d277427207374796c653d27666f6e742d73697a653a333270783b273e3c2f7370616e3e3c2f6469763e3c64697620636c6173733d276e2066313427207374796c653d276d617267696e2d746f703a313470783b273e4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220d6e518014ea3aee585c8595c2b3788599936a3360ed4c0d987b9b21f2c2ad4c264736f6c63430008040033";
    let analyzer = common::new_analyzer_from_bytecode(bytecode, LazyWatchdog.in_rc())?;

    // Get the final storage layout for the input contract
    let _layout = analyzer.analyze()?;

    // But really we just ensure that it completes for now, as before it would
    // always hang

    Ok(())
}
